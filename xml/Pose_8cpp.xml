<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="Pose_8cpp" kind="file" language="C++">
    <compoundname>Pose.cpp</compoundname>
    <includes refid="Pose_8hpp" local="yes">Pose.hpp</includes>
    <incdepgraph>
      <node id="3">
        <label>Translation.hpp</label>
        <link refid="Translation_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>okapi/api/units/QAngle.hpp</label>
      </node>
      <node id="6">
        <label>okapi/api/units/QLength.hpp</label>
      </node>
      <node id="8">
        <label>HolonomicLib/Pathing/Path/Trajectory.hpp</label>
        <link refid="Trajectory_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>okapi/api/odometry/odomState.hpp</label>
      </node>
      <node id="7">
        <label>okapi/api/units/QArea.hpp</label>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
      <node id="4">
        <label>Rotation.hpp</label>
        <link refid="Rotation_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Pose.hpp</label>
        <link refid="Pose_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/HolonomicLib/Pathing/Geometry/Pose.cpp</label>
        <link refid="Pose_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceHolonomicLib">HolonomicLib</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Pose_8hpp" kindref="compound">Pose.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceHolonomicLib" kindref="compound">HolonomicLib</ref>{</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><ref refid="classHolonomicLib_1_1Pose_1aae0c4fcdb51a29b39727563b7b95d9de" kindref="member">Pose::Pose</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Translation&amp;<sp/>itranslation,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Rotation&amp;<sp/>irotation){</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>translation<sp/>=<sp/>itranslation;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>rotation<sp/>=<sp/>irotation;</highlight></codeline>
<codeline lineno="7"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="classHolonomicLib_1_1Pose_1aae0c4fcdb51a29b39727563b7b95d9de" kindref="member">Pose::Pose</ref>(okapi::QLength<sp/>ix,<sp/>okapi::QLength<sp/>iy,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Rotation&amp;<sp/>irotation)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>translation(ix,<sp/>iy),<sp/>rotation(irotation){}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">Pose::Pose(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>okapi::OdomState&amp;<sp/>istate){</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>translation<sp/>=<sp/>Translation(istate.x,<sp/>-1*istate.y);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>rotation<sp/>=<sp/>Rotation(istate.theta);</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">Pose::Pose(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrajectoryState<sp/>&amp;istate){</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>translation<sp/>=<sp/>Translation(istate.x<sp/>*<sp/>okapi::foot,<sp/>istate.y<sp/>*<sp/>okapi::foot);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>rotation<sp/>=<sp/>Rotation(istate.theta<sp/>*<sp/>okapi::degree);</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">Pose::Pose(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TimedTrajectoryState<sp/>&amp;istate){</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>translation<sp/>=<sp/>Translation(istate.x<sp/>*<sp/>okapi::foot,<sp/>istate.y<sp/>*<sp/>okapi::foot);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>rotation<sp/>=<sp/>Rotation(istate.theta<sp/>*<sp/>okapi::degree);</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Translation&amp;<sp/>Pose::getTranslation()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>translation;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Rotation&amp;<sp/>Pose::getRotation()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rotation;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">okapi::QLength<sp/>Pose::X()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>translation.X();</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">okapi::QLength<sp/>Pose::Y()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>translation.Y();</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">okapi::QAngle<sp/>Pose::Theta()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rotation.Theta();</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Pose::operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Pose&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>translation<sp/>==<sp/>rhs.translation<sp/>&amp;&amp;<sp/>rotation<sp/>==<sp/>rhs.rotation;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Pose::operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Pose&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!operator==(rhs);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Pose::operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Pose&amp;<sp/>rhs){</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>translation<sp/>=<sp/>getTranslation();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>rotation<sp/>=<sp/>getRotation();</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">okapi::QAngle<sp/>Pose::angleTo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceHolonomicLib_1a7cceafb5a2f71496d1426c12e9591095" kindref="member">Point</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rotation.Theta()<sp/>-<sp/>(rhs-translation).Theta();</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/HolonomicLib/Pathing/Geometry/Pose.cpp"/>
  </compounddef>
</doxygen>
