<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classHolonomicLib_1_1Pose" kind="class" language="C++" prot="public">
    <compoundname>HolonomicLib::Pose</compoundname>
    <includes refid="Pose_8hpp" local="no">Pose.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classHolonomicLib_1_1Pose_1a7d4b4baef342a824dc37573f0db7899c" prot="private" static="no" mutable="no">
        <type><ref refid="classHolonomicLib_1_1Translation" kindref="compound">Translation</ref></type>
        <definition>Translation HolonomicLib::Pose::translation</definition>
        <argsstring></argsstring>
        <name>translation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Pathing/Geometry/Pose.hpp" line="73" column="17" bodyfile="include/HolonomicLib/Pathing/Geometry/Pose.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHolonomicLib_1_1Pose_1af82808bb7fbaefbe9950edaf71a81a1e" prot="private" static="no" mutable="no">
        <type><ref refid="classHolonomicLib_1_1Rotation" kindref="compound">Rotation</ref></type>
        <definition>Rotation HolonomicLib::Pose::rotation</definition>
        <argsstring></argsstring>
        <name>rotation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Pathing/Geometry/Pose.hpp" line="74" column="14" bodyfile="include/HolonomicLib/Pathing/Geometry/Pose.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHolonomicLib_1_1Pose_1aae0c4fcdb51a29b39727563b7b95d9de" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr HolonomicLib::Pose::Pose</definition>
        <argsstring>()=default</argsstring>
        <name>Pose</name>
        <briefdescription>
<para>Construct a new <ref refid="classHolonomicLib_1_1Pose" kindref="compound">Pose</ref> 2D object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Pathing/Geometry/Pose.hpp" line="14" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1Pose_1a6952b21767ec0a335003777c797fb010" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HolonomicLib::Pose::Pose</definition>
        <argsstring>(const Translation &amp;itranslation, const Rotation &amp;irotation)</argsstring>
        <name>Pose</name>
        <param>
          <type>const <ref refid="classHolonomicLib_1_1Translation" kindref="compound">Translation</ref> &amp;</type>
          <declname>itranslation</declname>
        </param>
        <param>
          <type>const <ref refid="classHolonomicLib_1_1Rotation" kindref="compound">Rotation</ref> &amp;</type>
          <declname>irotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Pathing/Geometry/Pose.hpp" line="17" column="5" bodyfile="src/HolonomicLib/Pathing/Geometry/Pose.cpp" bodystart="4" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1Pose_1a814cd879d0a087f4670b67ff7f517c40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HolonomicLib::Pose::Pose</definition>
        <argsstring>(okapi::QLength ix, okapi::QLength iy, const Rotation &amp;irotation)</argsstring>
        <name>Pose</name>
        <param>
          <type>okapi::QLength</type>
          <declname>ix</declname>
        </param>
        <param>
          <type>okapi::QLength</type>
          <declname>iy</declname>
        </param>
        <param>
          <type>const <ref refid="classHolonomicLib_1_1Rotation" kindref="compound">Rotation</ref> &amp;</type>
          <declname>irotation</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classHolonomicLib_1_1Pose" kindref="compound">Pose</ref> 2D object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ix</parametername>
</parameternamelist>
<parameterdescription>
<para>x </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iy</parametername>
</parameternamelist>
<parameterdescription>
<para>y </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>itheta</parametername>
</parameternamelist>
<parameterdescription>
<para>angle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Pathing/Geometry/Pose.hpp" line="26" column="5" bodyfile="src/HolonomicLib/Pathing/Geometry/Pose.cpp" bodystart="9" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1Pose_1a310c28ab1667831839092963fd84b4d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HolonomicLib::Pose::Pose</definition>
        <argsstring>(const okapi::OdomState &amp;istate)</argsstring>
        <name>Pose</name>
        <param>
          <type>const okapi::OdomState &amp;</type>
          <declname>istate</declname>
        </param>
        <briefdescription>
<para>Converts an okapi OdomState into a Pose2D This is done by negating y coordinate and constraining theta to be between -180 and 180. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>istate</parametername>
</parameternamelist>
<parameterdescription>
<para>the supplied OdomState </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Pathing/Geometry/Pose.hpp" line="34" column="5" bodyfile="src/HolonomicLib/Pathing/Geometry/Pose.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1Pose_1a8dfdb83c52b1e2ded58f8e0d5d497e42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HolonomicLib::Pose::Pose</definition>
        <argsstring>(const TrajectoryState &amp;istate)</argsstring>
        <name>Pose</name>
        <param>
          <type>const <ref refid="structHolonomicLib_1_1TrajectoryState" kindref="compound">TrajectoryState</ref> &amp;</type>
          <declname>istate</declname>
        </param>
        <briefdescription>
<para>Converts a <ref refid="structHolonomicLib_1_1TrajectoryState" kindref="compound">TrajectoryState</ref> into a Pose2D This is done by adding units (feet / degree) to the trajectory state&apos;s x, y and theta. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iState</parametername>
</parameternamelist>
<parameterdescription>
<para>the supplied TrajectoryStaet </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Pathing/Geometry/Pose.hpp" line="42" column="5" bodyfile="src/HolonomicLib/Pathing/Geometry/Pose.cpp" bodystart="17" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1Pose_1a26d73e42e81697e05107ee82a496b492" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HolonomicLib::Pose::Pose</definition>
        <argsstring>(const TimedTrajectoryState &amp;iState)</argsstring>
        <name>Pose</name>
        <param>
          <type>const <ref refid="structHolonomicLib_1_1TimedTrajectoryState" kindref="compound">TimedTrajectoryState</ref> &amp;</type>
          <declname>iState</declname>
        </param>
        <briefdescription>
<para>Converts a <ref refid="structHolonomicLib_1_1TimedTrajectoryState" kindref="compound">TimedTrajectoryState</ref> into a Pose2D This is done by adding units (feet / degree) to the trajectory state&apos;s x, y and theta. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iState</parametername>
</parameternamelist>
<parameterdescription>
<para>the suppliedTimeTrajectoryState </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Pathing/Geometry/Pose.hpp" line="50" column="5" bodyfile="src/HolonomicLib/Pathing/Geometry/Pose.cpp" bodystart="22" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1Pose_1ae1b8edd0acefbe6da254306f93df7e25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HolonomicLib::Pose::~Pose</definition>
        <argsstring>()=default</argsstring>
        <name>~Pose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Pathing/Geometry/Pose.hpp" line="52" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1Pose_1a319090c178940ae15e807ca6e043a087" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classHolonomicLib_1_1Translation" kindref="compound">Translation</ref> &amp;</type>
        <definition>const Translation &amp; HolonomicLib::Pose::getTranslation</definition>
        <argsstring>() const</argsstring>
        <name>getTranslation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Pathing/Geometry/Pose.hpp" line="54" column="23" bodyfile="src/HolonomicLib/Pathing/Geometry/Pose.cpp" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1Pose_1afd4e383feb9b5a892ff3ec46659eae1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classHolonomicLib_1_1Rotation" kindref="compound">Rotation</ref> &amp;</type>
        <definition>const Rotation &amp; HolonomicLib::Pose::getRotation</definition>
        <argsstring>() const</argsstring>
        <name>getRotation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Pathing/Geometry/Pose.hpp" line="56" column="20" bodyfile="src/HolonomicLib/Pathing/Geometry/Pose.cpp" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1Pose_1aab9ca116e22a2f3f49af8c749031ed5a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>okapi::QLength</type>
        <definition>okapi::QLength HolonomicLib::Pose::X</definition>
        <argsstring>() const</argsstring>
        <name>X</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Pathing/Geometry/Pose.hpp" line="58" column="20" bodyfile="src/HolonomicLib/Pathing/Geometry/Pose.cpp" bodystart="35" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1Pose_1abcf67e42436a2c894594a9194d9d93ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>okapi::QLength</type>
        <definition>okapi::QLength HolonomicLib::Pose::Y</definition>
        <argsstring>() const</argsstring>
        <name>Y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Pathing/Geometry/Pose.hpp" line="60" column="20" bodyfile="src/HolonomicLib/Pathing/Geometry/Pose.cpp" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1Pose_1a6e9b98815618e23a02cbbe6216393572" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>okapi::QAngle</type>
        <definition>okapi::QAngle HolonomicLib::Pose::Theta</definition>
        <argsstring>() const</argsstring>
        <name>Theta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Pathing/Geometry/Pose.hpp" line="62" column="19" bodyfile="src/HolonomicLib/Pathing/Geometry/Pose.cpp" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1Pose_1a70445fa892855b7a1cd30e054b733ec7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool HolonomicLib::Pose::operator==</definition>
        <argsstring>(const Pose &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classHolonomicLib_1_1Pose" kindref="compound">Pose</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Pathing/Geometry/Pose.hpp" line="64" column="10" bodyfile="src/HolonomicLib/Pathing/Geometry/Pose.cpp" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1Pose_1a0c5b6d3444d3d3e74fd24f224906986d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool HolonomicLib::Pose::operator!=</definition>
        <argsstring>(const Pose &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classHolonomicLib_1_1Pose" kindref="compound">Pose</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Pathing/Geometry/Pose.hpp" line="66" column="10" bodyfile="src/HolonomicLib/Pathing/Geometry/Pose.cpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1Pose_1a85f9e1cfaca14bbff057385367bee855" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HolonomicLib::Pose::operator=</definition>
        <argsstring>(const Pose &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classHolonomicLib_1_1Pose" kindref="compound">Pose</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Pathing/Geometry/Pose.hpp" line="68" column="10" bodyfile="src/HolonomicLib/Pathing/Geometry/Pose.cpp" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1Pose_1a12f855e3ed77513e9587f06f9b3d5515" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>okapi::QAngle</type>
        <definition>okapi::QAngle HolonomicLib::Pose::angleTo</definition>
        <argsstring>(const Translation &amp;rhs) const</argsstring>
        <name>angleTo</name>
        <param>
          <type>const <ref refid="classHolonomicLib_1_1Translation" kindref="compound">Translation</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Pathing/Geometry/Pose.hpp" line="70" column="19" bodyfile="src/HolonomicLib/Pathing/Geometry/Pose.cpp" bodystart="60" bodyend="62"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/HolonomicLib/Pathing/Geometry/Pose.hpp" line="8" column="11" bodyfile="include/HolonomicLib/Pathing/Geometry/Pose.hpp" bodystart="8" bodyend="75"/>
    <listofallmembers>
      <member refid="classHolonomicLib_1_1Pose_1a12f855e3ed77513e9587f06f9b3d5515" prot="public" virt="non-virtual"><scope>HolonomicLib::Pose</scope><name>angleTo</name></member>
      <member refid="classHolonomicLib_1_1Pose_1afd4e383feb9b5a892ff3ec46659eae1d" prot="public" virt="non-virtual"><scope>HolonomicLib::Pose</scope><name>getRotation</name></member>
      <member refid="classHolonomicLib_1_1Pose_1a319090c178940ae15e807ca6e043a087" prot="public" virt="non-virtual"><scope>HolonomicLib::Pose</scope><name>getTranslation</name></member>
      <member refid="classHolonomicLib_1_1Pose_1a0c5b6d3444d3d3e74fd24f224906986d" prot="public" virt="non-virtual"><scope>HolonomicLib::Pose</scope><name>operator!=</name></member>
      <member refid="classHolonomicLib_1_1Pose_1a85f9e1cfaca14bbff057385367bee855" prot="public" virt="non-virtual"><scope>HolonomicLib::Pose</scope><name>operator=</name></member>
      <member refid="classHolonomicLib_1_1Pose_1a70445fa892855b7a1cd30e054b733ec7" prot="public" virt="non-virtual"><scope>HolonomicLib::Pose</scope><name>operator==</name></member>
      <member refid="classHolonomicLib_1_1Pose_1aae0c4fcdb51a29b39727563b7b95d9de" prot="public" virt="non-virtual"><scope>HolonomicLib::Pose</scope><name>Pose</name></member>
      <member refid="classHolonomicLib_1_1Pose_1a6952b21767ec0a335003777c797fb010" prot="public" virt="non-virtual"><scope>HolonomicLib::Pose</scope><name>Pose</name></member>
      <member refid="classHolonomicLib_1_1Pose_1a814cd879d0a087f4670b67ff7f517c40" prot="public" virt="non-virtual"><scope>HolonomicLib::Pose</scope><name>Pose</name></member>
      <member refid="classHolonomicLib_1_1Pose_1a310c28ab1667831839092963fd84b4d6" prot="public" virt="non-virtual"><scope>HolonomicLib::Pose</scope><name>Pose</name></member>
      <member refid="classHolonomicLib_1_1Pose_1a8dfdb83c52b1e2ded58f8e0d5d497e42" prot="public" virt="non-virtual"><scope>HolonomicLib::Pose</scope><name>Pose</name></member>
      <member refid="classHolonomicLib_1_1Pose_1a26d73e42e81697e05107ee82a496b492" prot="public" virt="non-virtual"><scope>HolonomicLib::Pose</scope><name>Pose</name></member>
      <member refid="classHolonomicLib_1_1Pose_1af82808bb7fbaefbe9950edaf71a81a1e" prot="private" virt="non-virtual"><scope>HolonomicLib::Pose</scope><name>rotation</name></member>
      <member refid="classHolonomicLib_1_1Pose_1a6e9b98815618e23a02cbbe6216393572" prot="public" virt="non-virtual"><scope>HolonomicLib::Pose</scope><name>Theta</name></member>
      <member refid="classHolonomicLib_1_1Pose_1a7d4b4baef342a824dc37573f0db7899c" prot="private" virt="non-virtual"><scope>HolonomicLib::Pose</scope><name>translation</name></member>
      <member refid="classHolonomicLib_1_1Pose_1aab9ca116e22a2f3f49af8c749031ed5a" prot="public" virt="non-virtual"><scope>HolonomicLib::Pose</scope><name>X</name></member>
      <member refid="classHolonomicLib_1_1Pose_1abcf67e42436a2c894594a9194d9d93ea" prot="public" virt="non-virtual"><scope>HolonomicLib::Pose</scope><name>Y</name></member>
      <member refid="classHolonomicLib_1_1Pose_1ae1b8edd0acefbe6da254306f93df7e25" prot="public" virt="non-virtual"><scope>HolonomicLib::Pose</scope><name>~Pose</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
