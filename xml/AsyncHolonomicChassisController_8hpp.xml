<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="AsyncHolonomicChassisController_8hpp" kind="file" language="C++">
    <compoundname>AsyncHolonomicChassisController.hpp</compoundname>
    <includes local="yes">okapi/api/chassis/controller/odomChassisController.hpp</includes>
    <includes local="yes">okapi/api/chassis/model/xDriveModel.hpp</includes>
    <includes local="yes">okapi/api/chassis/controller/chassisController.hpp</includes>
    <includes local="yes">okapi/api/control/iterative/iterativePosPidController.hpp</includes>
    <includes local="yes">okapi/api/util/timeUtil.hpp</includes>
    <includes local="yes">okapi/impl/util/timeUtilFactory.hpp</includes>
    <includes local="yes">okapi/api/device/motor/abstractMotor.hpp</includes>
    <includes local="yes">okapi/api/units/QAngle.hpp</includes>
    <includes local="yes">okapi/api/units/QLength.hpp</includes>
    <includes local="yes">okapi/api/units/QTime.hpp</includes>
    <includes local="yes">okapi/api/units/QSpeed.hpp</includes>
    <includes local="no">iostream</includes>
    <includes refid="StateMachine_8hpp" local="yes">StateMachine.hpp</includes>
    <includes refid="TaskWrapper_8hpp" local="yes">TaskWrapper.hpp</includes>
    <includes refid="Pose2D_8hpp" local="yes">Pose2D.hpp</includes>
    <includes refid="HolonomicWheelSpeeds_8hpp" local="yes">HolonomicWheelSpeeds.hpp</includes>
    <includes refid="Math_8hpp" local="yes">Math.hpp</includes>
    <includes refid="Trajectory_8hpp" local="yes">Trajectory.hpp</includes>
    <includes refid="Units_8hpp" local="yes">Units.hpp</includes>
    <includedby refid="API_8hpp" local="yes">include/HolonomicLib/API.hpp</includedby>
    <includedby refid="AsyncHolonomicChassisController_8cpp" local="yes">src/HolonomicLib/AsyncHolonomicChassisController.cpp</includedby>
    <incdepgraph>
      <node id="27">
        <label>okapi/api/units/QAcceleration.hpp</label>
      </node>
      <node id="23">
        <label>Trajectory.hpp</label>
        <link refid="Trajectory_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/HolonomicLib/AsyncHolonomicChassisController.hpp</label>
        <link refid="AsyncHolonomicChassisController_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>okapi/api/units/QSpeed.hpp</label>
      </node>
      <node id="9">
        <label>okapi/api/units/QAngle.hpp</label>
      </node>
      <node id="10">
        <label>okapi/api/units/QLength.hpp</label>
      </node>
      <node id="14">
        <label>StateMachine.hpp</label>
        <link refid="StateMachine_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>okapi/api/device/motor/abstractMotor.hpp</label>
      </node>
      <node id="4">
        <label>okapi/api/chassis/controller/chassisController.hpp</label>
      </node>
      <node id="26">
        <label>Units.hpp</label>
        <link refid="Units_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>Math.hpp</label>
        <link refid="Math_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>vector</label>
      </node>
      <node id="19">
        <label>HolonomicWheelSpeeds.hpp</label>
        <link refid="HolonomicWheelSpeeds_8hpp"/>
      </node>
      <node id="11">
        <label>okapi/api/units/QTime.hpp</label>
      </node>
      <node id="6">
        <label>okapi/api/util/timeUtil.hpp</label>
      </node>
      <node id="21">
        <label>utility</label>
      </node>
      <node id="15">
        <label>pros/rtos.hpp</label>
      </node>
      <node id="2">
        <label>okapi/api/chassis/controller/odomChassisController.hpp</label>
      </node>
      <node id="3">
        <label>okapi/api/chassis/model/xDriveModel.hpp</label>
      </node>
      <node id="22">
        <label>math.h</label>
      </node>
      <node id="13">
        <label>iostream</label>
      </node>
      <node id="18">
        <label>Pose2D.hpp</label>
        <link refid="Pose2D_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>okapi/api/control/iterative/iterativePosPidController.hpp</label>
      </node>
      <node id="16">
        <label>TaskWrapper.hpp</label>
        <link refid="TaskWrapper_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>memory</label>
      </node>
      <node id="24">
        <label>initializer_list</label>
      </node>
      <node id="7">
        <label>okapi/impl/util/timeUtilFactory.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/HolonomicLib/AsyncHolonomicChassisController.hpp</label>
        <link refid="AsyncHolonomicChassisController_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/HolonomicLib/API.hpp</label>
        <link refid="API_8hpp"/>
      </node>
      <node id="3">
        <label>src/HolonomicLib/AsyncHolonomicChassisController.cpp</label>
        <link refid="AsyncHolonomicChassisController_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classHolonomicLib_1_1AsyncHolonomicChassisController" prot="public">HolonomicLib::AsyncHolonomicChassisController</innerclass>
    <innerclass refid="classHolonomicLib_1_1AsyncHolonomicChassisControllerBuilder" prot="public">HolonomicLib::AsyncHolonomicChassisControllerBuilder</innerclass>
    <innernamespace refid="namespaceHolonomicLib">HolonomicLib</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;okapi/api/chassis/controller/odomChassisController.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;okapi/api/chassis/model/xDriveModel.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;okapi/api/chassis/controller/chassisController.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;okapi/api/control/iterative/iterativePosPidController.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;okapi/api/util/timeUtil.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;okapi/impl/util/timeUtilFactory.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;okapi/api/device/motor/abstractMotor.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;okapi/api/units/QAngle.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;okapi/api/units/QLength.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;okapi/api/units/QTime.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;okapi/api/units/QSpeed.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="StateMachine_8hpp" kindref="compound">StateMachine.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TaskWrapper_8hpp" kindref="compound">TaskWrapper.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Pose2D_8hpp" kindref="compound">Pose2D.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="HolonomicWheelSpeeds_8hpp" kindref="compound">HolonomicWheelSpeeds.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Math_8hpp" kindref="compound">Math.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Trajectory_8hpp" kindref="compound">Trajectory.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Units_8hpp" kindref="compound">Units.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceHolonomicLib" kindref="compound">HolonomicLib</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="namespaceHolonomicLib_1afed0dfbd97b270c1dc11f0b884f915bd" refkind="member"><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespaceHolonomicLib_1afed0dfbd97b270c1dc11f0b884f915bd" kindref="member">ChassisState</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceHolonomicLib_1afed0dfbd97b270c1dc11f0b884f915bdac75bfd8cd96916d9604beadd22b43763" kindref="member">PATHING</ref>,<sp/><ref refid="namespaceHolonomicLib_1afed0dfbd97b270c1dc11f0b884f915bdafa2c1ab8021afcb8b7769e98eb0c09e3" kindref="member">TRANSLATING</ref>,<sp/><ref refid="namespaceHolonomicLib_1afed0dfbd97b270c1dc11f0b884f915bdaa5daf7f2ebbba4975d61dab1c40188c7" kindref="member">IDLE</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal">};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StateMachine&lt;ChassisState&gt;;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classHolonomicLib_1_1AsyncHolonomicChassisController" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisController" kindref="compound">AsyncHolonomicChassisController</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classHolonomicLib_1_1TaskWrapper" kindref="compound">TaskWrapper</ref>,<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classHolonomicLib_1_1StateMachine" kindref="compound">StateMachine&lt;ChassisState&gt;</ref><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisController" kindref="compound">AsyncHolonomicChassisController</ref>(std::shared_ptr&lt;okapi::OdomChassisController&gt;<sp/>ichassis,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>okapi::IterativePosPIDController::Gains<sp/>&amp;itranslateGains,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>okapi::IterativePosPIDController::Gains<sp/>&amp;iturnGains,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>okapi::TimeUtil&amp;<sp/>itimeUtil);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisController" kindref="compound">AsyncHolonomicChassisController</ref>(std::shared_ptr&lt;okapi::OdomChassisController&gt;<sp/>ichassis,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>okapi::IterativePosPIDController::Gains<sp/>&amp;itranslateGains,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>okapi::IterativePosPIDController::Gains<sp/>&amp;iturnGains,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structHolonomicLib_1_1Pose2D" kindref="compound">Pose2D</ref><sp/>&amp;isettleTolerance,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>okapi::TimeUtil&amp;<sp/>itimeUtil);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a39298643fed60a60698cf137a433a869" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a39298643fed60a60698cf137a433a869" kindref="member">AsyncHolonomicChassisControllerBuilder</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTarget(<ref refid="structHolonomicLib_1_1Pose2D" kindref="compound">Pose2D</ref><sp/>targetPose,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>waitUntilSettled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTarget(<ref refid="classHolonomicLib_1_1Trajectory" kindref="compound">Trajectory</ref><sp/>&amp;itrajectory,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>waitUntilSettled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTarget(<ref refid="classHolonomicLib_1_1TimedTrajectory" kindref="compound">TimedTrajectory</ref><sp/>&amp;itrajectory,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>waitUntilSettled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stop();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>waitUntilSettled();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPose(<ref refid="structHolonomicLib_1_1Pose2D" kindref="compound">Pose2D</ref><sp/>&amp;ipose);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structHolonomicLib_1_1Pose2D" kindref="compound">Pose2D</ref><sp/>getPose();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSettled();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="133" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a0fdec61410af96d89275473fca65894c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;okapi::XDriveModel&gt;<sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a0fdec61410af96d89275473fca65894c" kindref="member">model</ref>;</highlight></codeline>
<codeline lineno="134" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a9e957edd5ba5a6b97db19e5a35da3be1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;okapi::OdomChassisController&gt;<sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a9e957edd5ba5a6b97db19e5a35da3be1" kindref="member">chassis</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1af1d95cc7acd8b3c10b83ffcb18763cbf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;okapi::IterativePosPIDController&gt;<sp/>xController{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="137" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a6331d3e6176bbba4928397de53951587" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;okapi::IterativePosPIDController&gt;<sp/>yController{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="138" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a35e7fb858907a0f69e5a8811180465cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;okapi::IterativePosPIDController&gt;<sp/>turnController{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1ad0ac308bb0e13b1c5073331d73837c0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;okapi::AbstractRate&gt;<sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1ad0ac308bb0e13b1c5073331d73837c0e" kindref="member">rate</ref>;</highlight></codeline>
<codeline lineno="141" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1ae926a61b5d1bb75d978914fe173f73ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;okapi::AbstractTimer&gt;<sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1ae926a61b5d1bb75d978914fe173f73ab" kindref="member">timer</ref>;</highlight></codeline>
<codeline lineno="142" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a11d2dd008802aecd56e3a0d4b34e8369" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>okapi::QTime<sp/>delayTime{0.0};</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a3cc8ebdf34757bfbf44bb7f8799b466e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHolonomicLib_1_1Trajectory" kindref="compound">Trajectory</ref><sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a3cc8ebdf34757bfbf44bb7f8799b466e" kindref="member">trajectory</ref>;<sp/></highlight></codeline>
<codeline lineno="145" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a5a15bfa8df9ecbce31ca07ce55bbbfea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structHolonomicLib_1_1Pose2D" kindref="compound">Pose2D</ref><sp/>initialPose{0<sp/>*<sp/>okapi::inch,<sp/>0<sp/>*<sp/>okapi::inch,<sp/>0<sp/>*<sp/>okapi::degree};</highlight></codeline>
<codeline lineno="146" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1ad2bf5ee58e0866db70a82dc68a67186d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>okapi::OdomState<sp/>currentOdomState{0<sp/>*<sp/>okapi::inch,<sp/>0<sp/>*<sp/>okapi::inch,<sp/>0<sp/>*<sp/>okapi::degree};</highlight></codeline>
<codeline lineno="147" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a8ddc964faf9dd6942305e6fbb2a783c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structHolonomicLib_1_1Pose2D" kindref="compound">Pose2D</ref><sp/>currentPose{0<sp/>*<sp/>okapi::inch,<sp/>0<sp/>*<sp/>okapi::inch,<sp/>0<sp/>*<sp/>okapi::degree};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1aacf390977de28b9a0fa2f59a977419eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structHolonomicLib_1_1Pose2D" kindref="compound">Pose2D</ref><sp/>endPose{0<sp/>*<sp/>okapi::inch,<sp/>0<sp/>*<sp/>okapi::inch,<sp/>0<sp/>*<sp/>okapi::degree};</highlight></codeline>
<codeline lineno="150" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1ac05ed6d7299a1512b5b4d0f15fc1dc2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structHolonomicLib_1_1Pose2D" kindref="compound">Pose2D</ref><sp/>settleTolerance{1<sp/>*<sp/>okapi::inch,<sp/>1<sp/>*<sp/>okapi::inch,<sp/>1<sp/>*<sp/>okapi::degree};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a33367b32d444678c890b2c326f0c5a9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHolonomicLib_1_1TimedTrajectory" kindref="compound">TimedTrajectory</ref><sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a33367b32d444678c890b2c326f0c5a9a" kindref="member">timedTrajectory</ref>;</highlight></codeline>
<codeline lineno="153" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a8bbcf44d16d151ea5ea4846d745225c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>timedTrajectoryEnabled{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1aa54abc5771999cf9d0308ee322a5ea6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index{0};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a371df87b8aa3c38b89fbb45880d6b72a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialRun{</highlight><highlight class="keyword">true</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a876a5a913b687017ca4f99d44d37d1fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pros::Mutex<sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a876a5a913b687017ca4f99d44d37d1fb" kindref="member">lock</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>loop()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resetControllers();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>controllerFlipDisabled(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isDisabled);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">};</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="classHolonomicLib_1_1AsyncHolonomicChassisControllerBuilder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisControllerBuilder" kindref="compound">AsyncHolonomicChassisControllerBuilder</ref><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisControllerBuilder" kindref="compound">AsyncHolonomicChassisControllerBuilder</ref>();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classHolonomicLib_1_1AsyncHolonomicChassisControllerBuilder" kindref="compound">AsyncHolonomicChassisControllerBuilder</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisControllerBuilder" kindref="compound">AsyncHolonomicChassisControllerBuilder</ref>&amp;<sp/>withOutput(std::shared_ptr&lt;okapi::OdomChassisController&gt;<sp/>ichassis);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisControllerBuilder" kindref="compound">AsyncHolonomicChassisControllerBuilder</ref>&amp;<sp/>withPIDGains(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>okapi::IterativePosPIDController::Gains<sp/>&amp;itranslateGains,<sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>okapi::IterativePosPIDController::Gains<sp/>&amp;iturnGains);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisControllerBuilder" kindref="compound">AsyncHolonomicChassisControllerBuilder</ref>&amp;<sp/>withTolerance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structHolonomicLib_1_1Pose2D" kindref="compound">Pose2D</ref><sp/>&amp;isettleTolerance);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AsyncHolonomicChassisControllerBuilder&amp;<sp/>withFFGains(const<sp/>FeedforwardGains<sp/>&amp;itranslateGains);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;AsyncHolonomicChassisController&gt;<sp/>build();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;okapi::OdomChassisController&gt;<sp/><ref refid="main_8cpp_1a2aaa5a2ecb33ce62d94d3be910e5e156" kindref="member">chassis</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>okapi::IterativePosPIDController::Gains<sp/>pidTranslateGains;<sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>okapi::IterativePosPIDController::Gains<sp/>pidTurnGains;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structHolonomicLib_1_1Pose2D" kindref="compound">Pose2D</ref><sp/>settleTolerance{1<sp/>*<sp/>okapi::inch,<sp/>1<sp/>*<sp/>okapi::inch,<sp/>1<sp/>*<sp/>okapi::degree};</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pidInit{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>outputInit{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="209"><highlight class="normal">};</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="include/HolonomicLib/AsyncHolonomicChassisController.hpp"/>
  </compounddef>
</doxygen>
