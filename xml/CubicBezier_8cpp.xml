<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="CubicBezier_8cpp" kind="file" language="C++">
    <compoundname>CubicBezier.cpp</compoundname>
    <includes refid="CubicBezier_8hpp" local="yes">CubicBezier.hpp</includes>
    <incdepgraph>
      <node id="10">
        <label>okapi/api/units/QAcceleration.hpp</label>
      </node>
      <node id="3">
        <label>HolonomicLib/Pathing/Geometry/Translation.hpp</label>
        <link refid="Translation_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>okapi/api/units/QSpeed.hpp</label>
      </node>
      <node id="18">
        <label>cmath</label>
      </node>
      <node id="5">
        <label>okapi/api/units/QAngle.hpp</label>
      </node>
      <node id="13">
        <label>okapi/api/units/QAngularSpeed.hpp</label>
      </node>
      <node id="6">
        <label>okapi/api/units/QLength.hpp</label>
      </node>
      <node id="14">
        <label>HolonomicLib/Utility/Math.hpp</label>
        <link refid="Math_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>okapi/api/units/QArea.hpp</label>
      </node>
      <node id="1">
        <label>src/HolonomicLib/Pathing/Path/CubicBezier.cpp</label>
        <link refid="CubicBezier_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>vector</label>
      </node>
      <node id="12">
        <label>okapi/api/units/QTime.hpp</label>
      </node>
      <node id="8">
        <label>HolonomicLib/Pathing/Path/DiscretePath.hpp</label>
        <link refid="DiscretePath_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>utility</label>
      </node>
      <node id="2">
        <label>CubicBezier.hpp</label>
        <link refid="CubicBezier_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Rotation.hpp</label>
        <link refid="Rotation_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>iostream</label>
      </node>
      <node id="9">
        <label>HolonomicLib/Utility/Units.hpp</label>
        <link refid="Units_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceHolonomicLib">HolonomicLib</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="CubicBezier_8hpp" kindref="compound">CubicBezier.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceHolonomicLib" kindref="compound">HolonomicLib</ref>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><ref refid="structHolonomicLib_1_1CubicBezier_1_1Knot_1a1d75d648128efcea6233cb2d9d8499c5" kindref="member">CubicBezier::Knot::Knot</ref>(okapi::QLength<sp/>ix,<sp/>okapi::QLength<sp/>iy,<sp/>okapi::QAngle<sp/>iangle,<sp/>okapi::QLength<sp/>imag){</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structHolonomicLib_1_1CubicBezier_1_1Knot_1ae2e7bea48dd00f741be608902043ebcf" kindref="member">x</ref><sp/>=<sp/>ix;<sp/><ref refid="structHolonomicLib_1_1CubicBezier_1_1Knot_1a93ea8bd1befedf2a93d9e692df3762b0" kindref="member">y</ref><sp/>=<sp/>iy;<sp/><ref refid="structHolonomicLib_1_1CubicBezier_1_1Knot_1ae7e9487102d6a3229222f464626fef88" kindref="member">angle</ref><sp/>=<sp/>iangle;<sp/><ref refid="structHolonomicLib_1_1CubicBezier_1_1Knot_1ab87ea7b88c561648bf3e9f6048cde17f" kindref="member">mag</ref><sp/>=<sp/>imag;</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="classHolonomicLib_1_1CubicBezier_1a2d63b60f25eb801c31f4c12792869a30" kindref="member">CubicBezier::CubicBezier</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceHolonomicLib_1a7cceafb5a2f71496d1426c12e9591095" kindref="member">Point</ref><sp/>&amp;istart,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceHolonomicLib_1a7cceafb5a2f71496d1426c12e9591095" kindref="member">Point</ref><sp/>&amp;icontrol1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceHolonomicLib_1a7cceafb5a2f71496d1426c12e9591095" kindref="member">Point</ref><sp/>&amp;icontrol2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceHolonomicLib_1a7cceafb5a2f71496d1426c12e9591095" kindref="member">Point</ref><sp/>&amp;iend){</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>istart;<sp/>control1<sp/>=<sp/>icontrol1;<sp/>control2<sp/>=<sp/>icontrol2;<sp/>end<sp/>=<sp/>iend;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><ref refid="classHolonomicLib_1_1CubicBezier_1a2d63b60f25eb801c31f4c12792869a30" kindref="member">CubicBezier::CubicBezier</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Knot<sp/>&amp;istart,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Knot<sp/>&amp;iend){</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/><ref refid="namespaceHolonomicLib_1a7cceafb5a2f71496d1426c12e9591095" kindref="member">Point</ref>(istart.x,<sp/>istart.y);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>end<sp/>=<sp/><ref refid="namespaceHolonomicLib_1a7cceafb5a2f71496d1426c12e9591095" kindref="member">Point</ref>(iend.x,<sp/>iend.y);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>control1<sp/>=<sp/>start<sp/>+<sp/><ref refid="namespaceHolonomicLib_1a7cceafb5a2f71496d1426c12e9591095" kindref="member">Point</ref>(istart.mag<sp/>*<sp/>cos(istart.angle),<sp/>istart.mag<sp/>*<sp/>sin(istart.angle));</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>control2<sp/>=<sp/>end<sp/>+<sp/><ref refid="namespaceHolonomicLib_1a7cceafb5a2f71496d1426c12e9591095" kindref="member">Point</ref>(iend.mag<sp/>*<sp/>cos(iend.angle<sp/>+<sp/>M_PI*okapi::radian),<sp/>iend.mag<sp/>*<sp/>sin(iend.angle+M_PI*okapi::radian));</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="namespaceHolonomicLib_1a7cceafb5a2f71496d1426c12e9591095" kindref="member">Point</ref><sp/><ref refid="classHolonomicLib_1_1CubicBezier_1a521e443bba0351ea7089489196d2c2c0" kindref="member">CubicBezier::getPoint</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>start*(1-t)*(1-t)*(1-t)<sp/>+<sp/>control1*3*(1-t)*(1-t)*t<sp/>+<sp/>control2*3*(1-t)*t*t<sp/>+<sp/>end*t*t*t;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">DiscretePath<sp/><ref refid="classHolonomicLib_1_1CubicBezier_1af4afc4cf9541a594f7a40645c3e5dde2" kindref="member">CubicBezier::generate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>istep,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>iend)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(istep<sp/>&lt;<sp/>1){</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;CubicBezier::generate():<sp/>step<sp/>cannot<sp/>be<sp/>smaller<sp/>than<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Point&gt;<sp/>path;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>path.reserve(istep);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>1.0<sp/>/<sp/>(istep);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>istep;<sp/>i++){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>i<sp/>*<sp/>step;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.emplace_back(<ref refid="classHolonomicLib_1_1CubicBezier_1a521e443bba0351ea7089489196d2c2c0" kindref="member">getPoint</ref>(t));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iend){</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.emplace_back(<ref refid="classHolonomicLib_1_1CubicBezier_1a521e443bba0351ea7089489196d2c2c0" kindref="member">getPoint</ref>(1));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DiscretePath(path);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/HolonomicLib/Pathing/Path/CubicBezier.cpp"/>
  </compounddef>
</doxygen>
