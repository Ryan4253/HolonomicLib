#include "main.h"

/**
 * Runs initialization code. This occurs as soon as the program is started.
 *
 * All other competition modes are blocked by initialize; it is recommended
 * to keep execution time for this mode under a few seconds.
 */
using namespace okapi;

void initialize() {
	pros::lcd::initialize();
}

/**
 * Runs while the robot is in the disabled state of Field Management System or
 * the VEX Competition Switch, following either autonomous or opcontrol. When
 * the robot is enabled, this task will exit.
 */
void disabled() {}

/**
 * Runs after initialize(), and before autonomous when connected to the Field
 * Management System or the VEX Competition Switch. This is intended for
 * competition-specific initialization routines, such as an autonomous selector
 * on the LCD.
 *
 * This task will exit when the robot is enabled and autonomous or opcontrol
 * starts.
 */
void competition_initialize() {}

/**
 * Runs the user autonomous code. This function will be started in its own task
 * with the default priority and stack size whenever the robot is enabled via
 * the Field Management System or the VEX Competition Switch in the autonomous
 * mode. Alternatively, this function may be called in initialize or opcontrol
 * for non-competition testing purposes.
 *
 * If the robot is disabled or communications is lost, the autonomous task
 * will be stopped. Re-enabling the robot will restart the task, not re-start it
 * from where it left off.
 */
void autonomous() {}

Trajectory path = {
        {0,0,0,0,0},
        {0.0003,0,0,0.0293,2.7778},
        {0.0011,0,0,0.0769,4.9292},
        {0.0023,0,0,0.1256,4.9513},
        {0.0041,0,0,0.1753,4.9495},
        {0.0063,0,0,0.2254,5.0109},
        {0.0091,0,0,0.2753,5.006},
        {0.0123,0,0,0.3252,5.0039},
        {0.0161,0,0,0.3751,4.9838},
        {0.0203,0,0,0.4252,5.0068},
        {0.0251,0,0,0.4751,5.0053},
        {0.0303,0,0,0.5251,4.9905},
        {0.0361,0,0,0.5751,5.0063},
        {0.0423,0,0,0.6251,4.9936},
        {0.0491,0,0,0.6751,5.0065},
        {0.0563,0,0,0.725,4.9956},
        {0.0641,0,0,0.7751,4.997},
        {0.0723,0,0,0.8251,5.0071},
        {0.0811,0,0,0.8751,4.998},
        {0.0903,0,0,0.9251,4.9989},
        {0.1001,0,0,0.9751,4.9997},
        {0.1103,0,0,1.0251,5.0003},
        {0.1211,0,0,1.0751,5.0008},
        {0.1323,0,0,1.125,5.0013},
        {0.1441,0,0,1.1751,4.9954},
        {0.1563,0,0,1.2251,5.0026},
        {0.1691,0,0,1.275,5.0028},
        {0.1823,0,0,1.325,4.9975},
        {0.1961,0,0,1.375,4.9983},
        {0.2103,0,0,1.4251,4.999},
        {0.2251,0,0,1.4751,5.0046},
        {0.2403,0,0,1.5251,4.9951},
        {0.2561,0,0,1.5751,5.0053},
        {0.2723,0,0,1.625,4.9963},
        {0.2891,0,0,1.675,5.0015},
        {0.3063,0,0,1.7251,4.9976},
        {0.3241,0,0,1.7751,5.0023},
        {0.3423,0,0,1.825,5.0026},
        {0.3611,0,0,1.875,4.9951},
        {0.3803,0,0,1.925,5.0033},
        {0.4001,0,0,1.975,4.9962},
        {0.4203,0,0,2.025,5.0039},
        {0.4411,0,0,2.075,4.9971},
        {0.4623,0,0,2.125,5.001},
        {0.4841,0,0,2.175,5.0012},
        {0.5063,0,0,2.225,4.9982},
        {0.5291,0,0,2.275,5.0016},
        {0.5523,0,0,2.325,4.9987},
        {0.5761,0,0,2.375,5.0019},
        {0.6003,0,0,2.425,4.9991},
        {0.6251,0,0,2.475,4.9992},
        {0.6501,0,0,2.5,2.4965},
        {0.6751,0,0,2.5,0},
        {0.7001,0,0,2.5,0},
        {0.7251,0,0,2.5,0},
        {0.7501,0,0,2.5,0},
        {0.7751,0,0,2.5,0},
        {0.8001,0,0,2.5,0},
        {0.8251,0,0,2.5,0},
        {0.8501,0,0,2.5,0},
        {0.8751,0,0,2.5,0},
        {0.9001,0,0,2.5,0},
        {0.9251,0,0,2.5,0},
        {0.9501,0,0,2.5,0},
        {0.9751,0,0,2.5,0},
        {1.0001,0,0,2.5,0},
        {1.0251,0,0,2.5,0},
        {1.0501,0,0,2.5,0},
        {1.0751,0,0,2.5,0},
        {1.1001,0,0,2.5,0},
        {1.1251,0,0,2.5,0},
        {1.1501,0,0,2.5,0},
        {1.1751,0,0,2.5,0},
        {1.2001,0,0,2.5,0},
        {1.2251,0,0,2.5,0},
        {1.2501,0,0,2.5,0},
        {1.2751,0,0,2.5,0},
        {1.3001,0,0,2.5,0},
        {1.3251,0,0,2.5,0},
        {1.3501,0,0,2.5,0},
        {1.3751,0,0,2.5,0},
        {1.4001,0,0,2.5,0},
        {1.4251,0,0,2.5,0},
        {1.4501,0,0,2.5,0},
        {1.4751,0,0,2.5,0},
        {1.5001,0,0,2.5,0},
        {1.5251,0,0,2.5,0},
        {1.5501,0,0,2.5,0},
        {1.5751,0,0,2.5,0},
        {1.6001,0,0,2.5,0},
        {1.6251,0,0,2.5,0},
        {1.6501,0,0,2.5,0},
        {1.6751,0,0,2.5,0},
        {1.7001,0,0,2.5,0},
        {1.7251,0,0,2.5,0},
        {1.7501,0,0,2.5,0},
        {1.7751,0,0,2.5,0},
        {1.8001,0,0,2.5,0},
        {1.8251,0,0,2.5,0},
        {1.8501,0,0,2.5,0},
        {1.8751,0,0,2.5,0},
        {1.9001,0,0,2.5,0},
        {1.9251,0,0,2.5,0},
        {1.9501,0,0,2.5,0},
        {1.9751,0,0,2.5,0},
        {2.0001,0,0,2.5,0},
        {2.0251,0,0,2.5,0},
        {2.0501,0,0,2.5,0},
        {2.0751,0,0,2.5,0},
        {2.1001,0,0,2.5,0},
        {2.1251,0,0,2.5,0},
        {2.1501,0,0,2.5,0},
        {2.1751,0,0,2.5,0},
        {2.2001,0,0,2.5,0},
        {2.2251,0,0,2.5,0},
        {2.2501,0,0,2.5,0},
        {2.2751,0,0,2.5,0},
        {2.3001,0,0,2.5,0},
        {2.3251,0,0,2.5,0},
        {2.3501,0,0,2.5,0},
        {2.3751,0,0,2.5,0},
        {2.3998,0,0,2.4748,-2.5252},
        {2.4241,0,0,2.4248,-4.9997},
        {2.4478,0,0,2.3748,-5.0005},
        {2.4711,0,0,2.3248,-4.9977},
        {2.4938,0,0,2.2748,-5.002},
        {2.5161,0,0,2.2248,-4.9992},
        {2.5378,0,0,2.1748,-4.9999},
        {2.5591,0,0,2.1248,-5.0007},
        {2.5798,0,0,2.0748,-4.9975},
        {2.6001,0,0,2.0248,-5.0023},
        {2.6198,0,0,1.9748,-4.999},
        {2.639,0,0,1.9248,-5.0043},
        {2.6578,0,0,1.8748,-4.9962},
        {2.676,0,0,1.8248,-5.0015},
        {2.6938,0,0,1.7748,-4.9975},
        {2.711,0,0,1.7248,-5.0032},
        {2.7278,0,0,1.6748,-4.9939},
        {2.7441,0,0,1.6247,-5.005},
        {2.7598,0,0,1.5747,-5.0007},
        {2.775,0,0,1.5248,-5.0017},
        {2.7898,0,0,1.4748,-4.9966},
        {2.8041,0,0,1.4247,-4.9971},
        {2.8178,0,0,1.3747,-5.0042},
        {2.831,0,0,1.3248,-5.0056},
        {2.8438,0,0,1.2748,-4.9929},
        {2.856,0,0,1.2248,-5.0003},
        {2.8678,0,0,1.1748,-5.0012},
        {2.879,0,0,1.1248,-5.0022},
        {2.8898,0,0,1.0748,-4.9948},
        {2.9,0,0,1.0247,-5.0039},
        {2.9098,0,0,0.9747,-4.9959},
        {2.919,0,0,0.9247,-5.0062},
        {2.9278,0,0,0.8747,-4.9975},
        {2.936,0,0,0.8247,-4.9979},
        {2.9438,0,0,0.7746,-4.9983},
        {2.951,0,0,0.7247,-5.012},
        {2.9578,0,0,0.6747,-4.9875},
        {2.964,0,0,0.6246,-5.0004},
        {2.9698,0,0,0.5745,-5.0015},
        {2.975,0,0,0.5245,-5.0029},
        {2.9797,0,0,0.4746,-5.0047},
        {2.984,0,0,0.4245,-4.9845},
        {2.9877,0,0,0.3746,-5.0316},
        {2.991,0,0,0.3245,-4.9563},
        {2.9937,0,0,0.2745,-5.0413},
        {2.996,0,0,0.2246,-4.9806},
        {2.9977,0,0,0.1742,-4.9628},
        {2.999,0,0,0.1234,-4.9989},
        {2.9997,0,0,0.0725,-4.9972}
    }
;

Trajectory pathAngle = {
        {0.0002,0,0.0007,0,0},
        {0.0006,0.0001,0.0026,0.0417,3.7499},
        {0.0014,0.0002,0.0059,0.0798,3.9353},
        {0.0026,0.0003,0.0111,0.1281,5.0091},
        {0.0043,0.0005,0.0182,0.1763,5.0031},
        {0.0066,0.0008,0.028,0.226,4.8512},
        {0.0093,0.0011,0.0397,0.2767,5.0523},
        {0.0126,0.0015,0.0533,0.3265,5.031},
        {0.0162,0.002,0.0689,0.3758,5.0205},
        {0.0205,0.0025,0.0871,0.4257,4.9298},
        {0.0252,0.0031,0.1073,0.4759,5.028},
        {0.0304,0.0037,0.1294,0.5257,5.0215},
        {0.0362,0.0044,0.1541,0.5757,4.9537},
        {0.0424,0.0051,0.1807,0.6259,5.0239},
        {0.049,0.0059,0.2093,0.6757,5.0198},
        {0.0563,0.0068,0.2405,0.7257,4.9663},
        {0.064,0.0077,0.2736,0.7757,5.0211},
        {0.0721,0.0086,0.3087,0.8254,5.0185},
        {0.0808,0.0096,0.3464,0.8751,4.9744},
        {0.09,0.0107,0.3867,0.9253,4.9799},
        {0.0997,0.0118,0.429,0.9754,5.0215},
        {0.1099,0.0129,0.4738,1.0255,4.984},
        {0.1206,0.0141,0.5206,1.0756,5.0213},
        {0.1318,0.0153,0.57,1.1255,4.9873},
        {0.1434,0.0166,0.6214,1.1754,5.0211},
        {0.1556,0.0179,0.6753,1.2251,4.99},
        {0.1682,0.0193,0.7319,1.2751,4.9925},
        {0.1814,0.0207,0.791,1.3251,4.9947},
        {0.1952,0.0221,0.8528,1.3752,4.9967},
        {0.2093,0.0235,0.9165,1.4252,5.0234},
        {0.224,0.025,0.9834,1.4751,4.9742},
        {0.2392,0.0265,1.053,1.5253,5.0014},
        {0.2548,0.028,1.1245,1.5752,5.025},
        {0.271,0.0295,1.1992,1.625,4.9808},
        {0.2877,0.0311,1.2766,1.675,5.0049},
        {0.3049,0.0327,1.3572,1.7251,4.986},
        {0.3226,0.0342,1.4404,1.7752,5.0081},
        {0.3407,0.0358,1.5262,1.8252,5.0089},
        {0.3594,0.0374,1.6152,1.8751,4.9916},
        {0.3785,0.0389,1.7069,1.925,5.0115},
        {0.3983,0.0405,1.8024,1.975,4.9784},
        {0.4185,0.042,1.9006,2.0251,5.0147},
        {0.4391,0.0436,2.002,2.075,4.9992},
        {0.4603,0.0451,2.1066,2.1249,5.0011},
        {0.4821,0.0465,2.2152,2.175,4.9881},
        {0.5043,0.048,2.327,2.225,5.0053},
        {0.5269,0.0493,2.4421,2.275,5.0068},
        {0.5501,0.0507,2.561,2.3249,4.9947},
        {0.5739,0.0519,2.6839,2.3749,4.9972},
        {0.5981,0.0532,2.8106,2.4249,4.9996},
        {0.6228,0.0543,2.9413,2.4749,5.0018},
        {0.6479,0.0553,3.0752,2.4999,2.4852},
        {0.6728,0.0562,3.2097,2.4999,-0.0001},
        {0.6978,0.0571,3.3462,2.4999,-0.0001},
        {0.7228,0.0578,3.4847,2.4999,-0.0001},
        {0.7478,0.0583,3.6244,2.4999,-0.0001},
        {0.7728,0.0588,3.7661,2.4999,-0.0001},
        {0.7977,0.0591,3.9091,2.4999,-0.0001},
        {0.8228,0.0593,4.0547,2.4999,-0.0001},
        {0.8478,0.0593,4.2016,2.4999,-0.0001},
        {0.8728,0.0592,4.3505,2.4999,-0.0001},
        {0.8978,0.059,4.5013,2.4999,-0.0001},
        {0.9227,0.0586,4.654,2.4999,-0.0001},
        {0.9477,0.0581,4.8094,2.4999,-0.0001},
        {0.9727,0.0573,4.9667,2.4999,-0.0001},
        {0.9978,0.0565,5.1266,2.4999,-0.0001},
        {1.0227,0.0554,5.2884,2.4999,-0.0001},
        {1.0477,0.0541,5.4529,2.4999,-0.0001},
        {1.0727,0.0527,5.6199,2.4998,-0.0001},
        {1.0976,0.0511,5.7895,2.4998,-0.0001},
        {1.1225,0.0492,5.9618,2.4998,-0.0001},
        {1.1474,0.0472,6.1366,2.4998,-0.0001},
        {1.1723,0.0449,6.3147,2.4998,-0.0001},
        {1.1972,0.0423,6.4961,2.4998,-0.0001},
        {1.2221,0.0396,6.6807,2.4998,-0.0001},
        {1.2468,0.0365,6.8679,2.4998,-0.0001},
        {1.2717,0.0332,7.0596,2.4998,-0.0001},
        {1.2963,0.0297,7.254,2.4998,-0.0001},
        {1.3211,0.0258,7.4529,2.4998,-0.0001},
        {1.3457,0.0216,7.655,2.4998,-0.0001},
        {1.3703,0.0171,7.8617,2.4998,-0.0001},
        {1.3948,0.0122,8.073,2.4998,0},
        {1.4192,0.0069,8.2881,2.4998,0},
        {1.4436,0.0013,8.5085,2.4998,0},
        {1.4679,-0.0047,8.7334,2.4998,0},
        {1.492,-0.0111,8.9635,2.4998,0},
        {1.5161,-0.0181,9.1995,2.4998,0},
        {1.54,-0.0254,9.4406,2.4998,0},
        {1.5637,-0.0333,9.6876,2.4998,0.0001},
        {1.5872,-0.0417,9.9411,2.4998,0.0001},
        {1.6105,-0.0507,10.2005,2.4998,0.0001},
        {1.6336,-0.0603,10.467,2.4998,0.0002},
        {1.6564,-0.0705,10.74,2.4998,0.0002},
        {1.679,-0.0814,11.0208,2.4998,0.0003},
        {1.7011,-0.093,11.3087,2.4999,0.0004},
        {1.7229,-0.1053,11.6038,2.4999,0.0004},
        {1.7442,-0.1184,11.9074,2.4999,0.0005},
        {1.765,-0.1322,12.2181,2.4999,0.0006},
        {1.7851,-0.1469,12.5359,2.4912,-0.8675},
        {1.8044,-0.1622,12.857,2.4595,-3.172},
        {1.8227,-0.1781,13.1814,2.4302,-2.9293},
        {1.8401,-0.1947,13.5096,2.405,-2.5208},
        {1.8565,-0.212,13.8405,2.3838,-2.1177},
        {1.872,-0.2299,14.1746,2.3667,-1.7063},
        {1.8865,-0.2485,14.5119,2.3538,-1.2955},
        {1.8999,-0.2677,14.8512,2.3449,-0.8851},
        {1.9123,-0.2875,15.1938,2.3402,-0.47},
        {1.9237,-0.3079,15.5376,2.3397,-0.056},
        {1.934,-0.329,15.8834,2.3433,0.36},
        {1.9433,-0.3506,16.2312,2.351,0.7767},
        {1.9515,-0.3727,16.5796,2.363,1.1967},
        {1.9586,-0.3955,16.9293,2.3792,1.6149},
        {1.9647,-0.4187,17.2796,2.3995,2.0374},
        {1.9698,-0.4423,17.63,2.4241,2.4624},
        {1.9738,-0.4665,17.9816,2.453,2.8826},
        {1.9768,-0.4912,18.3339,2.4859,3.2912},
        {1.9789,-0.5161,18.683,2.5001,1.4174},
        {1.98,-0.5411,19.0275,2.5001,0.0005},
        {1.9802,-0.5661,19.3668,2.5001,0.0004},
        {1.9795,-0.5911,19.7015,2.5001,0.0003},
        {1.9781,-0.616,20.0304,2.5001,0.0002},
        {1.9759,-0.641,20.3548,2.5001,0.0001},
        {1.973,-0.6658,20.6739,2.5001,0.0001},
        {1.9695,-0.6905,20.9879,2.5001,0},
        {1.9655,-0.7152,21.2979,2.5001,0},
        {1.9608,-0.7398,21.6028,2.5001,0},
        {1.9557,-0.7642,21.9031,2.5001,-0.0001},
        {1.9501,-0.7886,22.1995,2.5001,-0.0001},
        {1.944,-0.8128,22.4913,2.5001,-0.0001},
        {1.9376,-0.837,22.7799,2.5001,-0.0001},
        {1.9307,-0.8611,23.0646,2.5001,-0.0001},
        {1.9235,-0.885,23.3454,2.5001,-0.0001},
        {1.9159,-0.9088,23.623,2.5001,-0.0001},
        {1.9081,-0.9326,23.8973,2.5001,-0.0002},
        {1.8999,-0.9562,24.1683,2.5001,-0.0002},
        {1.8915,-0.9797,24.4361,2.5001,-0.0002},
        {1.8828,-1.0031,24.7013,2.5001,-0.0002},
        {1.8738,-1.0265,24.9639,2.5001,-0.0002},
        {1.8646,-1.0498,25.2239,2.5001,-0.0002},
        {1.8552,-1.0729,25.4813,2.5001,-0.0002},
        {1.8457,-1.096,25.7361,2.5001,-0.0002},
        {1.8359,-1.119,25.989,2.5001,-0.0002},
        {1.8259,-1.1419,26.2399,2.5001,-0.0002},
        {1.8158,-1.1648,26.4882,2.5001,-0.0002},
        {1.8054,-1.1876,26.7352,2.5001,-0.0002},
        {1.795,-1.2102,26.9796,2.5,-0.0002},
        {1.7844,-1.2329,27.2227,2.5,-0.0002},
        {1.7737,-1.2555,27.4645,2.5,-0.0002},
        {1.7628,-1.278,27.7037,2.5,-0.0002},
        {1.7518,-1.3005,27.9422,2.5,-0.0002},
        {1.7407,-1.3229,28.1788,2.5,-0.0002},
        {1.7295,-1.3452,28.4141,2.5,-0.0002},
        {1.7182,-1.3675,28.6481,2.5,-0.0002},
        {1.7068,-1.3898,28.8808,2.5,-0.0002},
        {1.6954,-1.412,29.1122,2.5,-0.0002},
        {1.6838,-1.4342,29.343,2.5,-0.0002},
        {1.6721,-1.4563,29.5724,2.5,-0.0001},
        {1.6604,-1.4783,29.8006,2.5,-0.0001},
        {1.6486,-1.5004,30.0281,2.5,-0.0001},
        {1.6368,-1.5224,30.2543,2.5,-0.0001},
        {1.6248,-1.5443,30.4798,2.5,-0.0001},
        {1.6129,-1.5663,30.7047,2.5,-0.0001},
        {1.6008,-1.5882,30.929,2.5,-0.0001},
        {1.5887,-1.6101,31.1526,2.5,-0.0001},
        {1.5766,-1.632,31.3755,2.5,-0.0001},
        {1.5644,-1.6538,31.5972,2.5,-0.0001},
        {1.5522,-1.6756,31.8188,2.5,-0.0001},
        {1.54,-1.6974,32.0398,2.5,-0.0001},
        {1.5277,-1.7192,32.2608,2.5,-0.0001},
        {1.5154,-1.7409,32.4805,2.5,-0.0001},
        {1.503,-1.7627,32.7002,2.5,-0.0001},
        {1.4907,-1.7844,32.9199,2.5,-0.0001},
        {1.4783,-1.8061,33.139,2.5,-0.0001},
        {1.4659,-1.8279,33.358,2.5,-0.0001},
        {1.4535,-1.8496,33.5764,2.5,-0.0001},
        {1.4411,-1.8712,33.7948,2.5,-0.0001},
        {1.4286,-1.8929,34.0132,2.5,-0.0001},
        {1.4162,-1.9147,34.2316,2.5,-0.0001},
        {1.4038,-1.9363,34.4494,2.5,-0.0001},
        {1.3913,-1.958,34.6678,2.5,-0.0001},
        {1.3789,-1.9797,34.8855,2.5,-0.0001},
        {1.3665,-2.0014,35.1039,2.5,-0.0001},
        {1.3541,-2.0231,35.3223,2.5,-0.0001},
        {1.3417,-2.0448,35.5407,2.5,-0.0001},
        {1.3293,-2.0665,35.7591,2.5,-0.0001},
        {1.317,-2.0882,35.9775,2.5,-0.0001},
        {1.3046,-2.11,36.1966,2.5,-0.0001},
        {1.2923,-2.1318,36.4163,2.5,-0.0001},
        {1.28,-2.1535,36.6353,2.5,-0.0001},
        {1.2677,-2.1753,36.8557,2.5,-0.0001},
        {1.2555,-2.1971,37.076,2.5,-0.0001},
        {1.2433,-2.219,37.297,2.5,-0.0001},
        {1.2312,-2.2408,37.518,2.5,-0.0001},
        {1.2191,-2.2627,37.7396,2.5,-0.0001},
        {1.207,-2.2846,37.9626,2.5,-0.0001},
        {1.195,-2.3065,38.1855,2.5,-0.0001},
        {1.1831,-2.3285,38.4091,2.5,-0.0001},
        {1.1712,-2.3505,38.6334,2.5,-0.0001},
        {1.1594,-2.3725,38.8589,2.5,-0.0001},
        {1.1476,-2.3945,39.0845,2.5,-0.0001},
        {1.1359,-2.4167,39.312,2.5,-0.0001},
        {1.1243,-2.4388,39.5395,2.5,-0.0001},
        {1.1128,-2.461,39.7683,2.5,-0.0001},
        {1.1013,-2.4832,39.9984,2.5,-0.0001},
        {1.09,-2.5055,40.2291,2.5,-0.0001},
        {1.0787,-2.5278,40.4612,2.5,-0.0001},
        {1.0676,-2.5502,40.6945,2.5,-0.0001},
        {1.0565,-2.5726,40.9292,2.5,-0.0002},
        {1.0456,-2.5951,41.1651,2.5,-0.0002},
        {1.0348,-2.6177,41.4024,2.5,-0.0002},
        {1.0241,-2.6402,41.6409,2.5,-0.0002},
        {1.0135,-2.6629,41.8814,2.5,-0.0002},
        {1.0031,-2.6856,42.1232,2.5,-0.0002},
        {0.9929,-2.7084,42.367,2.5,-0.0002},
        {0.9828,-2.7313,42.612,2.5,-0.0002},
        {0.9728,-2.7542,42.8597,2.4999,-0.0002},
        {0.9631,-2.7772,43.1086,2.4999,-0.0002},
        {0.9535,-2.8003,43.3602,2.4999,-0.0002},
        {0.9441,-2.8235,43.6137,2.4999,-0.0002},
        {0.935,-2.8468,43.8691,2.4999,-0.0002},
        {0.926,-2.8701,44.1272,2.4999,-0.0002},
        {0.9173,-2.8936,44.3878,2.4999,-0.0002},
        {0.9089,-2.9171,44.6511,2.4999,-0.0002},
        {0.9007,-2.9407,44.9169,2.4999,-0.0002},
        {0.8928,-2.9644,45.1854,2.4999,-0.0001},
        {0.8852,-2.9883,45.4571,2.4999,-0.0001},
        {0.8779,-3.0121,45.7314,2.4999,-0.0001},
        {0.8709,-3.0362,46.0096,2.4999,-0.0001},
        {0.8644,-3.0603,46.2904,2.4999,-0.0001},
        {0.8582,-3.0845,46.5751,2.4999,-0.0001},
        {0.8524,-3.1088,46.8637,2.4999,-0.0001},
        {0.8471,-3.1332,47.1555,2.4999,-0.0001},
        {0.8422,-3.1578,47.4513,2.4999,-0.0001},
        {0.8379,-3.1824,47.7516,2.4999,0},
        {0.834,-3.2071,48.0558,2.4999,0},
        {0.8308,-3.2319,48.3645,2.4999,0},
        {0.8282,-3.2568,48.6772,2.4999,0.0001},
        {0.8262,-3.2817,48.9944,2.4999,0.0001},
        {0.825,-3.3066,49.3161,2.4999,0.0001},
        {0.8245,-3.3316,49.6424,2.4999,0.0002},
        {0.8248,-3.3567,49.9739,2.4999,0.0003},
        {0.826,-3.3816,50.3087,2.4999,0.0003},
        {0.8281,-3.4065,50.6486,2.4999,0.0004},
        {0.8312,-3.4313,50.9925,2.4999,0.0005},
        {0.8352,-3.4559,51.3383,2.4895,-1.0456},
        {0.8402,-3.48,51.6834,2.4615,-2.7971},
        {0.8462,-3.5036,52.0279,2.4371,-2.4419},
        {0.8533,-3.5267,52.3711,2.4167,-2.0425},
        {0.8613,-3.5493,52.7137,2.4003,-1.641},
        {0.8704,-3.5714,53.0549,2.3878,-1.2444},
        {0.8805,-3.593,53.3949,2.3794,-0.8476},
        {0.8916,-3.614,53.7329,2.3748,-0.4528},
        {0.9037,-3.6344,54.0689,2.3742,-0.0587},
        {0.9168,-3.6542,54.403,2.3776,0.3339},
        {0.9309,-3.6734,54.7345,2.3848,0.7257},
        {0.946,-3.692,55.0634,2.396,1.1157},
        {0.962,-3.71,55.3897,2.411,1.5042},
        {0.979,-3.7274,55.7134,2.43,1.8915},
        {0.9969,-3.7441,56.0332,2.4527,2.2819},
        {1.0158,-3.7603,56.3511,2.4794,2.6593},
        {1.0354,-3.7758,56.6637,2.4995,2.015},
        {1.0556,-3.7904,56.9699,2.5001,0.0615},
        {1.0764,-3.8044,57.2689,2.5001,0.0006},
        {1.0976,-3.8175,57.5607,2.5001,0.0005},
        {1.1193,-3.83,57.8461,2.5001,0.0005},
        {1.1413,-3.8418,58.1243,2.5001,0.0004},
        {1.1637,-3.8529,58.3953,2.5001,0.0003},
        {1.1864,-3.8635,58.6605,2.5001,0.0003},
        {1.2093,-3.8734,58.9186,2.5002,0.0002},
        {1.2326,-3.8827,59.1714,2.5002,0.0002},
        {1.2559,-3.8915,59.4178,2.5002,0.0001},
        {1.2795,-3.8998,59.6583,2.5002,0.0001},
        {1.3033,-3.9077,59.8942,2.5002,0.0001},
        {1.3271,-3.915,60.1243,2.5002,0.0001},
        {1.3511,-3.922,60.3492,2.5002,0},
        {1.3753,-3.9285,60.5702,2.5002,0},
        {1.3994,-3.9346,60.7847,2.4844,-1.5779},
        {1.4231,-3.9402,60.9908,2.4354,-4.895},
        {1.4464,-3.9453,61.1884,2.3855,-5.0049},
        {1.4692,-3.9501,61.3788,2.3355,-4.9932},
        {1.4917,-3.9545,61.5615,2.2854,-5.0063},
        {1.5137,-3.9585,61.7376,2.2354,-4.993},
        {1.5352,-3.9622,61.9066,2.1854,-5.0065},
        {1.5563,-3.9656,62.0691,2.1354,-5.0015},
        {1.5768,-3.9688,62.2251,2.0854,-5.0058},
        {1.597,-3.9716,62.3759,2.0354,-4.9885},
        {1.6167,-3.9743,62.5209,1.9853,-5.0025},
        {1.6359,-3.9767,62.66,1.9353,-5.0066},
        {1.6547,-3.979,62.7939,1.8853,-4.9986},
        {1.6729,-3.981,62.9226,1.8353,-5.0019},
        {1.6906,-3.9829,63.0461,1.7854,-5.0056},
        {1.7079,-3.9846,63.1657,1.7353,-4.9817},
        {1.7246,-3.9862,63.2794,1.6853,-5.0262},
        {1.7409,-3.9876,63.3893,1.6354,-4.9871},
        {1.7568,-3.9889,63.4952,1.5853,-4.9885},
        {1.7721,-3.9901,63.596,1.5352,-5.0228},
        {1.7869,-3.9912,63.6928,1.4853,-4.9943},
        {1.8012,-3.9921,63.7858,1.4353,-4.9963},
        {1.815,-3.993,63.8748,1.3853,-4.9985},
        {1.8284,-3.9938,63.96,1.3352,-5.0009},
        {1.8412,-3.9946,64.0412,1.2851,-5.0036},
        {1.8535,-3.9952,64.1186,1.2352,-5.0067},
        {1.8654,-3.9958,64.1927,1.1852,-4.9877},
        {1.8767,-3.9963,64.2629,1.1351,-5.0119},
        {1.8876,-3.9968,64.3298,1.0851,-4.9912},
        {1.8979,-3.9972,64.3929,1.0352,-5.0185},
        {1.9078,-3.9976,64.4533,0.9851,-4.9684},
        {1.9171,-3.9979,64.5099,0.9349,-5.0238},
        {1.926,-3.9982,64.5632,0.8849,-4.9992},
        {1.9343,-3.9985,64.6132,0.835,-5.0012},
        {1.9421,-3.9987,64.66,0.785,-5.0036},
        {1.9495,-3.9989,64.7036,0.7352,-5.0066},
        {1.9564,-3.9991,64.7445,0.6851,-4.969},
        {1.9627,-3.9993,64.7822,0.6347,-5.0079},
        {1.9686,-3.9994,64.8167,0.5846,-5.0123},
        {1.9739,-3.9995,64.8479,0.5347,-5.0183},
        {1.9788,-3.9996,64.8765,0.4847,-4.9662},
        {1.9831,-3.9997,64.9018,0.4345,-5.0233},
        {1.987,-3.9998,64.9246,0.3842,-4.9584},
        {1.9904,-3.9998,64.9441,0.3337,-5.0293},
        {1.9932,-3.9999,64.9603,0.284,-5.0497},
        {1.9955,-3.9999,64.974,0.2343,-4.9526},
        {1.9974,-4,64.985,0.1832,-4.9124},
        {1.9988,-4,64.9928,0.1316,-5.0423},
        {1.9996,-4,64.9974,0.082,-5.1707},
        {1.9999,-4,64.9993,0.029,-4.5644}
    }
;




/**
 * Runs the operator control code. This function will be started in its own task
 * with the default priority and stack size whenever the robot is enabled via
 * the Field Management System or the VEX Competition Switch in the operator
 * control mode.
 *
 * If no competition control is connected, this function will run immediately
 * following initialize().
 *
 * If the robot is disabled or communications is lost, the
 * operator control task will be stopped. Re-enabling the robot will restart the
 * task, not resume it from where it left off.
 */
Motor leftFront = Motor(19, false, AbstractMotor::gearset::green, AbstractMotor::encoderUnits::degrees);
Motor rightFront = Motor(11, true, AbstractMotor::gearset::green, AbstractMotor::encoderUnits::degrees);
Motor leftBack = Motor(10, false, AbstractMotor::gearset::green, AbstractMotor::encoderUnits::degrees);
Motor rightBack = Motor(1, true, AbstractMotor::gearset::green, AbstractMotor::encoderUnits::degrees);
ADIEncoder leftEnc = ADIEncoder('C', 'D');
ADIEncoder rightEnc = ADIEncoder('A', 'B');
ADIEncoder midEnc = ADIEncoder('E', 'F', true);
IMU imu = IMU(12);

std::shared_ptr<OdomChassisController> chassis = ChassisControllerBuilder()
    .withMotors(leftFront, rightFront, rightBack, leftBack)
    .withSensors(leftEnc, rightEnc, midEnc)
    .withDimensions(AbstractMotor::gearset::green, {{3.25_in, 10.25_in}, imev5GreenTPR})
    .withOdometry({{2.75_in, 13.5_in, 7_in, 2.75_in}, quadEncoderTPR})
    .buildOdometry();

std::shared_ptr<ExpandedXDriveModel> model = std::static_pointer_cast<ExpandedXDriveModel> (chassis->getModel());


void opcontrol() {
    imu.calibrate();
    pros::delay(2000);
    std::shared_ptr<AsyncHolonomicChassisController> hol = 
    AsyncHolonomicChassisControllerBuilder()
        .withOutput(chassis)
        .withPIDGains(
            {0.05, 0.0, 0.00065, 0.0}, 
            {0.05, 0.0, 0.00065, 0.0}
        )
        .withTolerance({2_in, 2_in, 1_deg})
        .build();

    // hol->setTarget({-10_in, 20_in, 90_deg});
    hol->setTarget(pathAngle);
    hol->waitUntilSettled();
    hol->setTarget({0_in, 0_in, 0_deg}, true);
    Controller master = Controller();
    while(true) {
        pros::lcd::print(1, "X: %f", hol->getPose().x.convert(inch));
        pros::lcd::print(2, "Y: %f", hol->getPose().y.convert(inch));
        pros::lcd::print(3, "Theta: %f", hol->getPose().theta.convert(degree));

        model->cartesian(master.getAnalog(ControllerAnalog::leftY), 
                         master.getAnalog(ControllerAnalog::leftX), 
                         master.getAnalog(ControllerAnalog::rightX), 
                         imu.get() * degree, 
                         0.05);

        pros::delay(10);
    }
}
